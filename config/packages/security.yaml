security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User: 
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        from_database:
            entity:
                class: App\Entity\User
                property: username
                

        #users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            #provider: users_in_memory
            provider: from_database
            logout:
                path:   /logout
                target: /
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            form_login:
                check_path: login
            # https://symfony.com/doc/current/security/form_login_setup.html    

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/supadmin, roles: ROLE_SUPADMIN, requires_channel: https }
        - { path: '^/', roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        
            

